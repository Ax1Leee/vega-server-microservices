// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.20.3
// source: micro/review/review.proto

package review

import (
	movie "github.com/Ax1Leee/vega-server-microservices/api/micro/movie"
	user "github.com/Ax1Leee/vega-server-microservices/api/micro/user"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Review struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rating        float32                `protobuf:"fixed32,1,opt,name=rating,proto3" json:"rating,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_micro_review_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{0}
}

func (x *Review) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Review) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetReviewFromUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewFromUserRequest) Reset() {
	*x = GetReviewFromUserRequest{}
	mi := &file_micro_review_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewFromUserRequest) ProtoMessage() {}

func (x *GetReviewFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewFromUserRequest.ProtoReflect.Descriptor instead.
func (*GetReviewFromUserRequest) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{1}
}

func (x *GetReviewFromUserRequest) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type GetReviewFromUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Movie         *movie.Movie           `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	Review        *Review                `protobuf:"bytes,2,opt,name=review,proto3" json:"review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewFromUserResponse) Reset() {
	*x = GetReviewFromUserResponse{}
	mi := &file_micro_review_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewFromUserResponse) ProtoMessage() {}

func (x *GetReviewFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewFromUserResponse.ProtoReflect.Descriptor instead.
func (*GetReviewFromUserResponse) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{2}
}

func (x *GetReviewFromUserResponse) GetMovie() *movie.Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

func (x *GetReviewFromUserResponse) GetReview() *Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetReviewToMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewToMovieRequest) Reset() {
	*x = GetReviewToMovieRequest{}
	mi := &file_micro_review_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewToMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewToMovieRequest) ProtoMessage() {}

func (x *GetReviewToMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewToMovieRequest.ProtoReflect.Descriptor instead.
func (*GetReviewToMovieRequest) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{3}
}

func (x *GetReviewToMovieRequest) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type GetReviewToMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *user.User             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Review        *Review                `protobuf:"bytes,2,opt,name=review,proto3" json:"review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewToMovieResponse) Reset() {
	*x = GetReviewToMovieResponse{}
	mi := &file_micro_review_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewToMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewToMovieResponse) ProtoMessage() {}

func (x *GetReviewToMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewToMovieResponse.ProtoReflect.Descriptor instead.
func (*GetReviewToMovieResponse) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{4}
}

func (x *GetReviewToMovieResponse) GetUser() *user.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetReviewToMovieResponse) GetReview() *Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MovieId       uint64                 `protobuf:"varint,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewRequest) Reset() {
	*x = GetReviewRequest{}
	mi := &file_micro_review_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRequest) ProtoMessage() {}

func (x *GetReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRequest) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{5}
}

func (x *GetReviewRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetReviewRequest) GetMovieId() uint64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Review        *Review                `protobuf:"bytes,1,opt,name=review,proto3" json:"review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReviewResponse) Reset() {
	*x = GetReviewResponse{}
	mi := &file_micro_review_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewResponse) ProtoMessage() {}

func (x *GetReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewResponse.ProtoReflect.Descriptor instead.
func (*GetReviewResponse) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{6}
}

func (x *GetReviewResponse) GetReview() *Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type SetReviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MovieId       uint64                 `protobuf:"varint,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	Rating        float32                `protobuf:"fixed32,3,opt,name=rating,proto3" json:"rating,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReviewRequest) Reset() {
	*x = SetReviewRequest{}
	mi := &file_micro_review_review_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReviewRequest) ProtoMessage() {}

func (x *SetReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReviewRequest.ProtoReflect.Descriptor instead.
func (*SetReviewRequest) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{7}
}

func (x *SetReviewRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetReviewRequest) GetMovieId() uint64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *SetReviewRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *SetReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SetReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Review        *Review                `protobuf:"bytes,1,opt,name=review,proto3" json:"review,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReviewResponse) Reset() {
	*x = SetReviewResponse{}
	mi := &file_micro_review_review_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReviewResponse) ProtoMessage() {}

func (x *SetReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_review_review_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReviewResponse.ProtoReflect.Descriptor instead.
func (*SetReviewResponse) Descriptor() ([]byte, []int) {
	return file_micro_review_review_proto_rawDescGZIP(), []int{8}
}

func (x *SetReviewResponse) GetReview() *Review {
	if x != nil {
		return x.Review
	}
	return nil
}

var File_micro_review_review_proto protoreflect.FileDescriptor

var file_micro_review_review_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x37, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22,
	0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x46, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x78, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x32, 0xbc, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x1f, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x54, 0x6f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x6f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x12, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x7b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x67, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x33, 0x5a, 0x31, 0x76, 0x65, 0x67, 0x61, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_micro_review_review_proto_rawDescOnce sync.Once
	file_micro_review_review_proto_rawDescData []byte
)

func file_micro_review_review_proto_rawDescGZIP() []byte {
	file_micro_review_review_proto_rawDescOnce.Do(func() {
		file_micro_review_review_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_micro_review_review_proto_rawDesc), len(file_micro_review_review_proto_rawDesc)))
	})
	return file_micro_review_review_proto_rawDescData
}

var file_micro_review_review_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_micro_review_review_proto_goTypes = []any{
	(*Review)(nil),                    // 0: review.Review
	(*GetReviewFromUserRequest)(nil),  // 1: review.GetReviewFromUserRequest
	(*GetReviewFromUserResponse)(nil), // 2: review.GetReviewFromUserResponse
	(*GetReviewToMovieRequest)(nil),   // 3: review.GetReviewToMovieRequest
	(*GetReviewToMovieResponse)(nil),  // 4: review.GetReviewToMovieResponse
	(*GetReviewRequest)(nil),          // 5: review.GetReviewRequest
	(*GetReviewResponse)(nil),         // 6: review.GetReviewResponse
	(*SetReviewRequest)(nil),          // 7: review.SetReviewRequest
	(*SetReviewResponse)(nil),         // 8: review.SetReviewResponse
	(*movie.Movie)(nil),               // 9: movie.Movie
	(*user.User)(nil),                 // 10: user.User
}
var file_micro_review_review_proto_depIdxs = []int32{
	9,  // 0: review.GetReviewFromUserResponse.movie:type_name -> movie.Movie
	0,  // 1: review.GetReviewFromUserResponse.review:type_name -> review.Review
	10, // 2: review.GetReviewToMovieResponse.user:type_name -> user.User
	0,  // 3: review.GetReviewToMovieResponse.review:type_name -> review.Review
	0,  // 4: review.GetReviewResponse.review:type_name -> review.Review
	0,  // 5: review.SetReviewResponse.review:type_name -> review.Review
	1,  // 6: review.ReviewService.GetReviewFromUser:input_type -> review.GetReviewFromUserRequest
	3,  // 7: review.ReviewService.GetReviewToMovie:input_type -> review.GetReviewToMovieRequest
	5,  // 8: review.ReviewService.GetReview:input_type -> review.GetReviewRequest
	7,  // 9: review.ReviewService.SetReview:input_type -> review.SetReviewRequest
	2,  // 10: review.ReviewService.GetReviewFromUser:output_type -> review.GetReviewFromUserResponse
	4,  // 11: review.ReviewService.GetReviewToMovie:output_type -> review.GetReviewToMovieResponse
	6,  // 12: review.ReviewService.GetReview:output_type -> review.GetReviewResponse
	8,  // 13: review.ReviewService.SetReview:output_type -> review.SetReviewResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_micro_review_review_proto_init() }
func file_micro_review_review_proto_init() {
	if File_micro_review_review_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_micro_review_review_proto_rawDesc), len(file_micro_review_review_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_micro_review_review_proto_goTypes,
		DependencyIndexes: file_micro_review_review_proto_depIdxs,
		MessageInfos:      file_micro_review_review_proto_msgTypes,
	}.Build()
	File_micro_review_review_proto = out.File
	file_micro_review_review_proto_goTypes = nil
	file_micro_review_review_proto_depIdxs = nil
}
